<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="http://structorizer.fisch.lu/" version="3.25" text="&#34;public bestimmeAbleitung ()&#34;" comment="" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;ArrayList&#60;String&#62; abgeleitereProdukte &#60;- new ArrayList&#60;&#62;();&#34;" comment="" color="ffffff" rotated="0"></instruction>
		<instruction text="&#34;ArrayList&#60;String&#62; arrayList &#60;- new ArrayList&#60;&#62;();&#34;" comment="" color="ffffff" rotated="0"></instruction>
		<instruction text="&#34;arrayList &#60;- dieDaten.zerlegteProdukte;&#34;" comment="" color="ffffff" rotated="0"></instruction>
		<while text="&#34;for (int i = 0; i &#60; arrayList.size(); i++)&#34;" comment="" color="ffffff">
			<qWhile>
				<alternative text="&#34;if (produkt.contains(&#34;&#34;sin(x)&#34;&#34;))&#34;" comment="&#34;&#34;" color="ffffff">
					<qTrue>
						<instruction text="&#34;skonstante &#60;- produkt.substring(0,j);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
						<instruction text="&#34;konstante &#60;- bestimmeKonstanteDesProdukts(skonstante);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
						<instruction text="&#34;abgeleiteteTrigometire &#60;- format.format(konstante)+&#34;&#34;cos(x)&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
						<alternative text="&#34;if (konstante &#62; 1 || konstante &#62; 0 &amp;&amp; konstante&#60; 1)&#34;" comment="&#34;&#34;" color="ffffff">
							<qTrue>
								<instruction text="&#34;abgeleiteteTrigometire &#60;- &#34;&#34;+&#34;&#34;+format.format(konstante)+&#34;&#34;cos(x)&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
							</qTrue>
							<qFalse>
							</qFalse>
						</alternative>
						<alternative text="&#34;if (konstante == 1)&#34;" comment="&#34;&#34;" color="ffffff">
							<qTrue>
								<instruction text="&#34;abgeleiteteTrigometire &#60;- &#34;&#34;+cos(x)&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
							</qTrue>
							<qFalse>
							</qFalse>
						</alternative>
					</qTrue>
					<qFalse>
						<alternative text="&#34;else if (produkt.contains(&#34;&#34;cos(x)&#34;&#34;))&#34;" comment="&#34;&#34;" color="ffffff">
							<qTrue>
								<alternative text="&#34;if (charList[j] == 'c')&#34;" comment="&#34;&#34;" color="ffffff">
									<qTrue>
										<instruction text="&#34;skonstante &#60;- produkt.substring(0,j);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;konstante &#60;- bestimmeKonstanteDesProdukts(skonstante);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;konstante &#60;- konstante*-1;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;abgeleiteteTrigometire &#60;- format.format(konstante)+&#34;&#34;sin(x)&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<alternative text="&#34;if (konstante &#62; 1 || konstante &#62; 0 &amp;&amp; konstante&#60; 1)&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;abgeleiteteTrigometire &#60;- &#34;&#34;+&#34;&#34;+format.format(konstante)+&#34;&#34;sin(x)&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
										<alternative text="&#34;if (konstante == 1)&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;abgeleiteteTrigometire &#60;- &#34;&#34;+sin(x)&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
									</qTrue>
									<qFalse>
									</qFalse>
								</alternative>
							</qTrue>
							<qFalse>
								<alternative text="&#34;else if (charList[j] =='x')&#34;" comment="&#34;&#34;" color="ffffff">
									<qTrue>
										<instruction text="&#34;String ableitungProdukt &#60;- &#34;&#34;&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;skonstante &#60;- produkt.substring(0, j);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;shochzahl &#60;- produkt.substring(j,produkt.length());	&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;konstante &#60;- bestimmeKonstanteDesProdukts(skonstante);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;exponent &#60;- bestimmeExponent(shochzahl);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;neuKonstante &#60;- konstante*exponent;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;neuExponent &#60;- exponent-1; &#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<instruction text="&#34;ableitungProdukt &#60;- format.format(neuKonstante)+&#34;&#34;x^&#34;&#34;+format.format(neuExponent);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
										<alternative text="&#34;if (neuKonstante == 1 )&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;ableitungProdukt &#60;- &#34;&#34;x^&#34;&#34;+format.format(neuExponent);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
										<alternative text="&#34;if (neuExponent == 1)&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;ableitungProdukt &#60;- format.format(neuKonstante)+&#34;&#34;x&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
										<alternative text="&#34;if (neuExponent == 1 &amp;&amp; neuKonstante == 1)&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;ableitungProdukt =&#34;&#34;+x&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
										<alternative text="&#34; if (neuExponent == 0 &amp;&amp; neuKonstante == 1)&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;ableitungProdukt =&#34;&#34;1&#34;&#34;;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
										<alternative text="&#34;if(neuExponent == 0 &amp;&amp; neuKonstante&#62;=0)&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;ableitungProdukt &#60;- &#34;&#34;+&#34;&#34;+format.format(neuKonstante);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
										<alternative text="&#34;if(neuExponent == 0 &amp;&amp; neuKonstante&#60;0)&#34;" comment="&#34;&#34;" color="ffffff">
											<qTrue>
												<instruction text="&#34;ableitungProdukt &#60;- format.format(neuKonstante);&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
											</qTrue>
											<qFalse>
											</qFalse>
										</alternative>
									</qTrue>
									<qFalse>
									</qFalse>
								</alternative>
							</qFalse>
						</alternative>
					</qFalse>
				</alternative>
			</qWhile>
		</while>
	</children>
</root>