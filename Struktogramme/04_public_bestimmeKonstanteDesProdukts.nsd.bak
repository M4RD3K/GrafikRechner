<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="http://structorizer.fisch.lu/" version="3.25" text="&#34;public bestimmeKonstanteDesProdukts(String skonstante)&#34;" comment="" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;index:GZ &#60;- 1;&#34;" comment="" color="ffffff" rotated="0"></instruction>
		<instruction text="&#34;dkonstante:FKZ &#60;- 0.0;&#34;" comment="" color="ffffff" rotated="0"></instruction>
		<instruction text="&#34;nenner:FKZ;&#34;" comment="" color="ffffff" rotated="0"></instruction>
		<instruction text="&#34;zaeler:FKZ;&#34;" comment="" color="ffffff" rotated="0"></instruction>
		<alternative text="&#34;if(skonstante.contains(&#34;&#34;/&#34;&#34;))&#34;" comment="" color="ffffff">
			<qTrue>
				<instruction text="&#34;char[] list &#60;- skonstante.toCharArray();&#34;" comment="" color="ffffff" rotated="0"></instruction>
				<while text="&#34;for (int i = 0; i &#60; list.length; i++)&#34;" comment="" color="ffffff">
					<qWhile>
						<alternative text="&#34;if (list[i] == '/')&#34;" comment="" color="ffffff">
							<qTrue>
								<instruction text="&#34;index &#60;- i;&#34;" comment="" color="ffffff" rotated="0"></instruction>
							</qTrue>
							<qFalse>
							</qFalse>
						</alternative>
					</qWhile>
				</while>
				<instruction text="&#34;nenner &#60;- Double.parseDouble(skonstante.substring(0,index));&#34;" comment="" color="ffffff" rotated="0"></instruction>
				<instruction text="&#34;zaeler &#60;- Double.parseDouble(skonstante.substring(index+1,skonstante.length()));&#34;" comment="" color="ffffff" rotated="0"></instruction>
				<instruction text="&#34;dkonstante &#60;- nenner/zaeler;&#34;" comment="" color="ffffff" rotated="0"></instruction>
				<instruction text="&#34;return dkonstante;&#34;" comment="" color="ffffff" rotated="0"></instruction>
			</qTrue>
			<qFalse>
			</qFalse>
		</alternative>
		<alternative text="&#34;if (skonstante.equals(&#34;&#34;&#34;&#34;))&#34;" comment="" color="ffffff">
			<qTrue>
				<instruction text="&#34;return 1;&#34;" comment="" color="ffffff" rotated="0"></instruction>
			</qTrue>
			<qFalse>
				<alternative text="&#34;if (Double.parseDouble(skonstante) == 0)&#34;" comment="" color="ffffff">
					<qTrue>
						<instruction text="&#34;return 0;&#34;" comment="" color="ffffff" rotated="0"></instruction>
					</qTrue>
					<qFalse>
						<instruction text="&#34;dkonstante &#60;- Double.parseDouble(skonstante);	&#34;" comment="" color="ffffff" rotated="0"></instruction>
					</qFalse>
				</alternative>
			</qFalse>
		</alternative>
		<alternative text="&#34;else if (skonstante.equals(&#34;&#34;-&#34;&#34;))&#34;" comment="" color="ffffff">
			<qTrue>
				<instruction text="&#34;return -1;&#34;" comment="" color="ffffff" rotated="0"></instruction>
			</qTrue>
			<qFalse>
				<alternative text="&#34;if (Double.parseDouble(skonstante) == 0)&#34;" comment="" color="ffffff">
					<qTrue>
						<instruction text="&#34;return 0;&#34;" comment="" color="ffffff" rotated="0"></instruction>
					</qTrue>
					<qFalse>
						<instruction text="&#34;dkonstante &#60;- Double.parseDouble(skonstante);	&#34;" comment="" color="ffffff" rotated="0"></instruction>
					</qFalse>
				</alternative>
			</qFalse>
		</alternative>
		<alternative text="&#34;else if (skonstante.equals(&#34;&#34;+&#34;&#34;))&#34;" comment="" color="ffffff">
			<qTrue>
				<instruction text="&#34;return 1;&#34;" comment="" color="ffffff" rotated="0"></instruction>
			</qTrue>
			<qFalse>
				<alternative text="&#34;if (Double.parseDouble(skonstante) == 0)&#34;" comment="" color="ffffff">
					<qTrue>
						<instruction text="&#34;return 0;&#34;" comment="" color="ffffff" rotated="0"></instruction>
					</qTrue>
					<qFalse>
						<instruction text="&#34;dkonstante &#60;- Double.parseDouble(skonstante);	&#34;" comment="" color="ffffff" rotated="0"></instruction>
					</qFalse>
				</alternative>
			</qFalse>
		</alternative>
	</children>
</root>